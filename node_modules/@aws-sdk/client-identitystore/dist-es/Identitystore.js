import { __extends } from "tslib";
import { DescribeGroupCommand, } from "./commands/DescribeGroupCommand";
import { DescribeUserCommand, } from "./commands/DescribeUserCommand";
import { ListGroupsCommand } from "./commands/ListGroupsCommand";
import { ListUsersCommand } from "./commands/ListUsersCommand";
import { IdentitystoreClient } from "./IdentitystoreClient";
var Identitystore = (function (_super) {
    __extends(Identitystore, _super);
    function Identitystore() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Identitystore.prototype.describeGroup = function (args, optionsOrCb, cb) {
        var command = new DescribeGroupCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get ".concat(typeof optionsOrCb));
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    Identitystore.prototype.describeUser = function (args, optionsOrCb, cb) {
        var command = new DescribeUserCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get ".concat(typeof optionsOrCb));
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    Identitystore.prototype.listGroups = function (args, optionsOrCb, cb) {
        var command = new ListGroupsCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get ".concat(typeof optionsOrCb));
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    Identitystore.prototype.listUsers = function (args, optionsOrCb, cb) {
        var command = new ListUsersCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get ".concat(typeof optionsOrCb));
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    return Identitystore;
}(IdentitystoreClient));
export { Identitystore };
